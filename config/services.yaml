# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.
# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
#
# * Parameters
#
imports:
    - { resource: parameters.yaml }
    - { resource: services/services.yaml }

#
# * Services
#
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true        # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Adding this fixes this error: There are no commands defined in the "command" namespace.
    App\Command\:
        resource: '../src/Command'
#        autowire: true
#        autoconfigure: true
#        public: true
#        tags: ['controller.service_arguments']

    # Define path of data fixtures for "bin/console doctrine:generate:fixture"
    App\DataStore\DataFixtures\:
        resource: '../src/DataStore/DataFixtures'
        tags: ['doctrine.fixture.orm']

    # Auto-wire repos - eg. $repo = $this->get(ExpertiseRepository::class);
    App\DataStore\Repository\:
        autowire: true
        public: true
        resource: '../src/DataStore/Repository/*'
        tags: ['doctrine.repository_service']
